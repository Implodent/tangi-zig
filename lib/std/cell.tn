pub fn UnsafeCell(comptime infer T: type) type {
    struct {
        value: T,

        const Self = @Self();

        pub fn new(value: T) Self {
            Self { .value = value }
        }
        pub fn into_inner(self) T {
            self.value
        }
        pub fn get(&const self) *T {
            @constCast( // *const T -> *T
                @as(*const T, // *const Self -> *const T (mem layout is the same)
                    @ptrCast(
                        @as(
                            *const Self, // &const Self -> *const Self
                            @ptrCast(self)
                        )
                    )
                )
            )
        }
        pub fn get_mut(&self) &T {
            &self.value
        }
        pub fn raw_get(self: *const Self) *T {
            @constCast( // *const T -> *T
                @ptrCast(self) // *const Self -> *const T
            )
        }
    }
}
